function write(e){screen.innerHTML=e}function adder(e,r){return e+r}function minuser(e,r){return e-r}function divider(e,r){return e/r}function multiplyer(e,r){return e*r}function operate(e,r,u){switch(u){case"+":result=adder(e,r);break;case"-":result=minuser(e,r);break;case"/":result=divider(e,r);break;case"x":result=multiplyer(e,r);break;default:alert("Error")}return result}function clear(){userNum=[],userOperator=[],screenData=""}function Calculator(){var e={"-":function(e,r){return e-r},"+":function(e,r){return e+r},"/":function(e,r){return e/r},x:function(e,r){return e*r}};this.calculate=function(r){var u=r.split(" "),t=+u[0],n=u[1],s=+u[2];return!e[n]||isNaN(t)||isNaN(s)?NaN:e[n](+t,+s)}}for(var keys=document.querySelectorAll("span"),operBtn=document.querySelectorAll(".operator"),screen=document.querySelector(".screen"),operators=[],userNum=[],userOperator=[],screenData="",k=0,result,i=0;i<operBtn.length;i++)operators[i]=operBtn[i].innerHTML;for(var i=0;i<keys.length;i++)keys[i].onclick=function(){var e=this.innerHTML;if("="!==e&&"C"!==e)screenData+=e,write(screenData),"operator"!==this.className?(void 0==userNum[k]?(console.log(userNum[k]),userNum.push(e),userNum[k]=+userNum[k]):(console.log(userNum[k]),userNum[k]=+(userNum[k]+e)),console.log(userNum)):(userOperator.push(e),k+=1,console.log(userOperator));else if("="===e)for(var r=0;r<userNum.length-1;r++)screenData=operate(+userNum[r],+userNum[r+1],userOperator[r]+""),write(screenData),userNum=[],userOperator=[];else clear(),write(screenData)};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyIsInNjcmlwdDEuanMiXSwibmFtZXMiOlsid3JpdGUiLCJpdGVtIiwic2NyZWVuIiwiaW5uZXJIVE1MIiwiYWRkZXIiLCJhIiwiYiIsIm1pbnVzZXIiLCJkaXZpZGVyIiwibXVsdGlwbHllciIsIm9wZXJhdGUiLCJvcCIsInJlc3VsdCIsImFsZXJ0IiwiY2xlYXIiLCJ1c2VyTnVtIiwidXNlck9wZXJhdG9yIiwic2NyZWVuRGF0YSIsIkNhbGN1bGF0b3IiLCJtZXRob2RzIiwiLSIsIisiLCIvIiwieCIsInRoaXMiLCJjYWxjdWxhdGUiLCJzdHIiLCJzcGxpdCIsImlzTmFOIiwiTmFOIiwia2V5cyIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsIm9wZXJCdG4iLCJxdWVyeVNlbGVjdG9yIiwib3BlcmF0b3JzIiwiayIsImkiLCJsZW5ndGgiLCJvbmNsaWNrIiwiYnRuVmFsIiwiY2xhc3NOYW1lIiwidW5kZWZpbmVkIiwiY29uc29sZSIsImxvZyIsInB1c2giXSwibWFwcGluZ3MiOiJBQWdCQSxRQUFBQSxPQUFBQyxHQUNBQyxPQUFBQyxVQUFBRixFQUdBLFFBQUFHLE9BQUFDLEVBQUFDLEdBQ0EsTUFBQUQsR0FBQUMsRUFHQSxRQUFBQyxTQUFBRixFQUFBQyxHQUNBLE1BQUFELEdBQUFDLEVBR0EsUUFBQUUsU0FBQUgsRUFBQUMsR0FDQSxNQUFBRCxHQUFBQyxFQUdBLFFBQUFHLFlBQUFKLEVBQUFDLEdBQ0EsTUFBQUQsR0FBQUMsRUFHQSxRQUFBSSxTQUFBTCxFQUFBQyxFQUFBSyxHQUNBLE9BQUFBLEdBQ0EsSUFBQSxJQUNBQyxPQUFBUixNQUFBQyxFQUFBQyxFQUNBLE1BQ0EsS0FBQSxJQUNBTSxPQUFBTCxRQUFBRixFQUFBQyxFQUNBLE1BQ0EsS0FBQSxJQUNBTSxPQUFBSixRQUFBSCxFQUFBQyxFQUNBLE1BQ0EsS0FBQSxJQUNBTSxPQUFBSCxXQUFBSixFQUFBQyxFQUNBLE1BQ0EsU0FDQU8sTUFBQSxTQUdBLE1BQUFELFFBR0EsUUFBQUUsU0FDQUMsV0FDQUMsZ0JBQ0FDLFdBQUEsR0M1REEsUUFBQUMsY0FFQSxHQUFBQyxJQUNBQyxJQUFBLFNBQUFmLEVBQUFDLEdBQ0EsTUFBQUQsR0FBQUMsR0FFQWUsSUFBQSxTQUFBaEIsRUFBQUMsR0FDQSxNQUFBRCxHQUFBQyxHQUVBZ0IsSUFBQSxTQUFBakIsRUFBQUMsR0FDQSxNQUFBRCxHQUFBQyxHQUVBaUIsRUFBQSxTQUFBbEIsRUFBQUMsR0FDQSxNQUFBRCxHQUFBQyxHQUlBa0IsTUFBQUMsVUFBQSxTQUFBQyxHQUVBLEdBQUFDLEdBQUFELEVBQUFDLE1BQUEsS0FDQXRCLEdBQUFzQixFQUFBLEdBQ0FoQixFQUFBZ0IsRUFBQSxHQUNBckIsR0FBQXFCLEVBQUEsRUFFQSxRQUFBUixFQUFBUixJQUFBaUIsTUFBQXZCLElBQUF1QixNQUFBdEIsR0FDQXVCLElBR0FWLEVBQUFSLElBQUFOLEdBQUFDLElEakJBLElBQUEsR0FYQXdCLE1BQUFDLFNBQUFDLGlCQUFBLFFBQ0FDLFFBQUFGLFNBQUFDLGlCQUFBLGFBQ0E5QixPQUFBNkIsU0FBQUcsY0FBQSxXQUNBQyxhQUNBcEIsV0FDQUMsZ0JBQ0FDLFdBQUEsR0FDQW1CLEVBQUEsRUFDQXhCLE9BR0F5QixFQUFBLEVBQUFBLEVBQUFKLFFBQUFLLE9BQUFELElBQ0FGLFVBQUFFLEdBQUFKLFFBQUFJLEdBQUFsQyxTQW1EQSxLQUFBLEdBQUFrQyxHQUFBLEVBQUFBLEVBQUFQLEtBQUFRLE9BQUFELElBQ0FQLEtBQUFPLEdBQUFFLFFBQUEsV0FDQSxHQUFBQyxHQUFBaEIsS0FBQXJCLFNBRUEsSUFBQSxNQUFBcUMsR0FBQSxNQUFBQSxFQUNBdkIsWUFBQXVCLEVBQ0F4QyxNQUFBaUIsWUFFQSxhQUFBTyxLQUFBaUIsV0FDQUMsUUFBQTNCLFFBQUFxQixJQUNBTyxRQUFBQyxJQUFBN0IsUUFBQXFCLElBQ0FyQixRQUFBOEIsS0FBQUwsR0FDQXpCLFFBQUFxQixJQUFBckIsUUFBQXFCLEtBRUFPLFFBQUFDLElBQUE3QixRQUFBcUIsSUFDQXJCLFFBQUFxQixLQUFBckIsUUFBQXFCLEdBQUFJLElBRUFHLFFBQUFDLElBQUE3QixXQUVBQyxhQUFBNkIsS0FBQUwsR0FDQUosR0FBQSxFQUNBTyxRQUFBQyxJQUFBNUIsbUJBRUEsSUFBQSxNQUFBd0IsRUFDQSxJQUFBLEdBQUFILEdBQUEsRUFBQUEsRUFBQXRCLFFBQUF1QixPQUFBLEVBQUFELElBQ0FwQixXQUFBUCxTQUFBSyxRQUFBc0IsSUFBQXRCLFFBQUFzQixFQUFBLEdBQUFyQixhQUFBcUIsR0FBQSxJQUNBckMsTUFBQWlCLFlBQ0FGLFdBQ0FDLG9CQUdBRixTQUNBZCxNQUFBaUIiLCJmaWxlIjoic2NyaXB0Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBrZXlzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnc3BhbicpO1xudmFyIG9wZXJCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcub3BlcmF0b3InKTtcbnZhciBzY3JlZW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2NyZWVuJyk7XG52YXIgb3BlcmF0b3JzID0gW107XG52YXIgdXNlck51bSA9IFtdO1xudmFyIHVzZXJPcGVyYXRvciA9IFtdO1xudmFyIHNjcmVlbkRhdGEgPSAnJztcbnZhciBrID0gMDtcbnZhciByZXN1bHQ7XG5cbi8v0L7Qv9GA0LXQtNC10LvRj9C10Lwg0LzQsNGB0YHQuNCyINC00L7Qv9GD0YHRgtC40LzRi9GFINC+0L/QtdGA0LDRhtC40LlcbmZvciAodmFyIGkgPSAwOyBpIDwgb3BlckJ0bi5sZW5ndGg7IGkrKykge1xuICAgIG9wZXJhdG9yc1tpXSA9IG9wZXJCdG5baV0uaW5uZXJIVE1MO1xufVxuXG4vL9GE0YPQvdC60YbQuNGPINCy0YvQstC+0LTQsCDQvdCwINGN0LrRgNCw0L1cbmZ1bmN0aW9uIHdyaXRlKGl0ZW0pIHtcbiAgICBzY3JlZW4uaW5uZXJIVE1MID0gaXRlbTtcbn1cblxuZnVuY3Rpb24gYWRkZXIoYSwgYikge1xuICAgIHJldHVybiBhK2I7XG59XG5cbmZ1bmN0aW9uIG1pbnVzZXIoYSwgYikge1xuICAgIHJldHVybiBhLWI7XG59XG5cbmZ1bmN0aW9uIGRpdmlkZXIoYSwgYikge1xuICAgIHJldHVybiBhL2I7XG59XG5cbmZ1bmN0aW9uIG11bHRpcGx5ZXIoYSwgYikge1xuICAgIHJldHVybiBhKmI7XG59XG5cbmZ1bmN0aW9uIG9wZXJhdGUgKGEsIGIsIG9wKSB7XG4gICAgc3dpdGNoIChvcCkge1xuICAgICAgICBjYXNlICcrJzpcbiAgICAgICAgICAgIHJlc3VsdCA9IGFkZGVyKGEsIGIpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJy0nOlxuICAgICAgICAgICAgcmVzdWx0ID0gbWludXNlcihhLCBiKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICcvJzpcbiAgICAgICAgICAgIHJlc3VsdCA9IGRpdmlkZXIoYSwgYik7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAneCc6XG4gICAgICAgICAgICByZXN1bHQgPSBtdWx0aXBseWVyKGEsIGIpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBhbGVydCggJ0Vycm9yJyApO1xuICAgIH1cblxuICAgIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIGNsZWFyKCkge1xuICAgIHVzZXJOdW0gPSBbXTtcbiAgICB1c2VyT3BlcmF0b3IgPSBbXTtcbiAgICBzY3JlZW5EYXRhID0gJyc7XG59XG5cbmZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgIGtleXNbaV0ub25jbGljayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGJ0blZhbCA9IHRoaXMuaW5uZXJIVE1MO1xuXG4gICAgICAgIGlmICgoYnRuVmFsICE9PSAnPScpICYmIChidG5WYWwgIT09ICdDJykpIHtcbiAgICAgICAgICAgIHNjcmVlbkRhdGEgKz0gYnRuVmFsO1xuICAgICAgICAgICAgd3JpdGUoc2NyZWVuRGF0YSk7XG5cbiAgICAgICAgICAgIGlmICh0aGlzLmNsYXNzTmFtZSAhPT0gJ29wZXJhdG9yJykge1xuICAgICAgICAgICAgICAgIGlmICh1c2VyTnVtW2tdID09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh1c2VyTnVtW2tdKTtcbiAgICAgICAgICAgICAgICAgICAgdXNlck51bS5wdXNoKGJ0blZhbCk7XG4gICAgICAgICAgICAgICAgICAgIHVzZXJOdW1ba10gPSArdXNlck51bVtrXTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh1c2VyTnVtW2tdKTtcbiAgICAgICAgICAgICAgICAgICAgdXNlck51bVtrXSA9ICsodXNlck51bVtrXSArIGJ0blZhbCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHVzZXJOdW0pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB1c2VyT3BlcmF0b3IucHVzaChidG5WYWwpO1xuICAgICAgICAgICAgICAgIGsgKz0gMTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh1c2VyT3BlcmF0b3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGJ0blZhbCA9PT0gJz0nKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHVzZXJOdW0ubGVuZ3RoLTE7IGkrKykge1xuICAgICAgICAgICAgICAgIHNjcmVlbkRhdGEgPSBvcGVyYXRlKCt1c2VyTnVtW2ldLCArdXNlck51bVtpICsgMV0sIHVzZXJPcGVyYXRvcltpXSArICcnKTtcbiAgICAgICAgICAgICAgICB3cml0ZShzY3JlZW5EYXRhKTtcbiAgICAgICAgICAgICAgICB1c2VyTnVtID0gW107XG4gICAgICAgICAgICAgICAgdXNlck9wZXJhdG9yID0gW107XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjbGVhcigpO1xuICAgICAgICAgICAgd3JpdGUoc2NyZWVuRGF0YSk7XG4gICAgICAgIH1cbiAgICB9XG59O1xuXG4iLCJmdW5jdGlvbiBDYWxjdWxhdG9yKCkge1xuXG4gICAgdmFyIG1ldGhvZHMgPSB7XG4gICAgICAgICctJzogZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgICAgICAgIHJldHVybiBhIC0gYjtcbiAgICAgICAgfSxcbiAgICAgICAgJysnOiBmdW5jdGlvbiAoYSwgYikge1xuICAgICAgICAgICAgcmV0dXJuIGEgKyBiO1xuICAgICAgICB9LFxuICAgICAgICAnLyc6IGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgICAgICByZXR1cm4gYSAvIGI7XG4gICAgICAgIH0sXG4gICAgICAgICd4JzogZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgICAgICAgIHJldHVybiBhICogYjtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICB0aGlzLmNhbGN1bGF0ZSA9IGZ1bmN0aW9uKHN0cikge1xuXG4gICAgICAgIHZhciBzcGxpdCA9IHN0ci5zcGxpdCgnICcpLFxuICAgICAgICAgICAgYSA9ICtzcGxpdFswXSxcbiAgICAgICAgICAgIG9wID0gc3BsaXRbMV0sXG4gICAgICAgICAgICBiID0gK3NwbGl0WzJdXG5cbiAgICAgICAgaWYgKCFtZXRob2RzW29wXSB8fCBpc05hTihhKSB8fCBpc05hTihiKSkge1xuICAgICAgICAgICAgcmV0dXJuIE5hTjtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBtZXRob2RzW29wXSgrYSwgK2IpO1xuICAgIH1cblxufVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
